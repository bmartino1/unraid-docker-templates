<?xml version="1.0"?>
<Container version="2">
  <Name>RocketChat</Name>
  <Repository>registry.rocket.chat/rocketchat/rocket.chat:latest</Repository>
  <Registry>https://hub.docker.com/r/library/rocket.chat/</Registry>
  <Network>br0</Network>
  <MyIP>192.168.2.240</MyIP>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.lime-technology.com/topic/61337-support-rocketchat/</Support>
  <Project/>
  <Overview>From Rocket Chat Maintainer Compose file: https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml&#xD;Rocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor fullstack framework.&#xD;
&#xD;
It is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.</Overview>
  <Category>Network:Messenger</Category>
  <WebUI>http://[IP]:[PORT:3000]</WebUI>
  <TemplateURL/>
  <Icon>https://raw.githubusercontent.com/bmartino1/unraid-docker-templates/refs/heads/main/images/rocketchat.png</Icon>
  <ExtraParams>--hostname rocketchat --dns=8.8.8.8</ExtraParams>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1747677811</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Requires>mongodb-rocketchat is need as it setups teh replica mongodb corectly to use</Requires>
  <Config Name="Upload Directory Path" Target="/app/uploads" Default="/mnt/user/appdata/rocketchat" Mode="rw" Description="" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/rocketchat</Config>
  <Config Name="MONGO_URL" Target="MONGO_URL" Default="mongodb://mongo:27017/rocketchat" Mode="" Description="conect to mysql replica database" Type="Variable" Display="always" Required="true" Mask="false">mongodb://192.168.x.x:27017/rocketchat?replicaSet=rs0</Config>
  <Config Name="Rocket.Chat URL" Target="ROOT_URL" Default="http://localhost:3000" Mode="" Description="Configuration set to your custum subnet IP" Type="Variable" Display="always" Required="true" Mask="false">http://192.168.x.x:3000/</Config>
  <Config Name="MONGO_OPLOG_URL" Target="MONGO_OPLOG_URL" Default="" Mode="" Description="conect to mysql replica database" Type="Variable" Display="always" Required="true" Mask="false">mongodb://192.168.x.x1:27017/local?replicaSet=rs0</Config>
  <Config Name="REG_TOKEN" Target="REG_TOKEN" Default="" Mode="" Description="" Type="Variable" Display="always" Required="false" Mask="false">""</Config>
  <Config Name="Port" Target="port" Default="3000" Mode="" Description="Docker varable set port" Type="Variable" Display="always" Required="false" Mask="false">3000</Config>
  <Config Name="DEPLOY_METHOD" Target="DEPLOY_METHOD" Default="docker" Mode="" Description="Maintainer info" Type="Variable" Display="advanced-hide" Required="false" Mask="false">docker</Config>
  <Config Name="DEPLOY_PLATFORM" Target="DEPLOY_PLATFORM" Default="unraid" Mode="" Description="Maintainer info" Type="Variable" Display="advanced-hide" Required="false" Mask="false">unraid</Config>
  <Config Name="TailScale Fallback State Directory" Target="CA_TS_FALLBACK_DIR" Default="/app/uploads" Mode="" Description="Fallback container directory for tailscale state information" Type="Variable" Display="advanced" Required="null" Mask="null">/app/uploads</Config>
  <Config Name="Port" Target="3000" Default="3000" Mode="tcp" Description="Docker Bridge Nat Port" Type="Port" Display="advanced" Required="true" Mask="false">3000</Config>
  <TailscaleStateDir/>
</Container>
